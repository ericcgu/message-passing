# I don't want to add more because typically I would create the API via FastAPI, which auto generates OpenAPI Specifications.
openapi: 3.0.0
info:
  description: API for interacting with Persons from UdaConnect
  version: "1.0.0"
  title: Person API
paths:
  /api/persons:
    get:
      summary: Retrieves all persons
      operationId: getAllPersons
      description: Retrieves all the persons that have been created.
      responses:
        '200':
          description: All persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '400':
          description: Bad input parameter
    post:
      summary: Adds a person
      operationId: addPerson
      description: Creates a person.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonNew'
        description: Person that was created
      responses:
        '201':
          description: Person created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: 'Invalid input, object invalid'
  /api/persons/{personId}:
    get:
      summary: Retrieves a person
      operationId: getPerson
      description: Get the person that have been created with the given ID
      parameters:
      - name: personId
        in: path
        description: ID of the person to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        '200':
          description: Person with given ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '400':
          description: Bad input parameter
components:
  schemas:
    Person:
      type: object
      required:
        - id
        - first_name
        - last_name
        - company_name
      properties:
        id:
          type: integer
          example: '1'
        first_name:
          type: string
          example: 'Eric'
        last_name:
          type: string
          example: 'Gu'
        company_name:
          type: string
          example: 'Google'
    PersonNew:
      type: object
      required:
        - first_name
        - last_name
        - company_name
      properties:
        first_name:
          type: string
          example: 'Eric'
        last_name:
          type: string
          example: 'Gu'
        company_name:
          type: string
          example: 'Google'